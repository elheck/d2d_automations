name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: d2d_automations
            asset_name: d2d_automations-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: d2d_automations.exe
            asset_name: d2d_automations-windows-amd64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install System Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            libssl-dev \
            lld \
            clang \
            libx11-dev \
            libwayland-dev \
            libxcb-randr0-dev \
            libxcb-ewmh-dev \
            libxcb-icccm4-dev \
            libxcursor-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: |
          cd check_stock
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare Release Asset
        shell: bash
        run: |
          cd check_stock/target/${{ matrix.target }}/release/
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          else
            tar -czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          fi
          cd -

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            check_stock/${{ matrix.asset_name }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
